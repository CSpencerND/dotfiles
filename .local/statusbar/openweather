#!/usr/bin/env bash

get_icon() {
    # MOON=$(cat $XDG_CACHE_HOME/moonphase)
    MOON=$(curl -sf "wttr.in/?format=%m")
    case $1 in
        # Icons for weather-icons
        01d) icon="";; # 🌞  ☀        Clear sky - day
        01n) icon="$MOON";; # 🌜 🌛    Clear sky - night
        02d) icon="";; # 🌤            Few clouds (11-25%) - day
        # 02n) icon="";; #              Few clouds (11-25%) - night
        02n) icon="$MOON";;   #Few clouds (11-25%) - night
        03d) icon="";; #   🌥          Scattered clouds (25-50%) - day/night
        03n) icon="$MOON";;       #Scattered clouds (25-50%) - day/night
        04d) icon="";; #   ☁          Broken / Overcast clouds (51-84% / 85-100%) - day/night
        04n) icon="${MOON} ";;     #Broken / Overcast clouds (51-84% / 85-100%) - day/night
        09d) icon="";; #   🌧          Shower rain - day
        # 09n) icon="";; #   🌧          Shower rain - night
        09n) icon="${MOON} ";;       #Shower rain - night
        10d) icon="";; #  🌧           Moderate / heavy rain - day
        # 10n) icon="";; #   🌧          Moderate / heavy rain - night
        10n) icon="${MOON}'";;       #Moderate / heavy rain - night
        11d) icon="";; #   🌩 ⛈        Thunderstorm - day
        # 11n) icon="";; #   🌩 ⛈        Thunderstorm - night
        11n) icon="${MOON} ";;        #Thunderstorm - night
        13d) icon="";; #   🌨          Snow - day
        # 13n) icon="";; #   🌨          Snow - night
        13n) icon="${MOON} ";;       #Snow - night
        50d) icon="";; #   ⛆          Fog - day
        # 50n) icon="";; #   ⛆          Fog - night
        50n) icon="${MOON} ";;       #Fog - night
        *) icon=""; #                 ??
    esac

    echo $icon
}

get_duration() {

    osname=$(uname -s)

    case $osname in
        *BSD) date -r "$1" -u +%H:%M;;
        *) date --date="@$1" -u +%H:%M;;
    esac

}

KEY="ef8c3512dedaf5aa46ed1ca846d4fade"
CITY=""
UNITS="imperial"
SYMBOL="°"

API="https://api.openweathermap.org/data/2.5"

if [ -n "$CITY" ]; then
    if [ "$CITY" -eq "$CITY" ] 2>/dev/null; then
        CITY_PARAM="id=$CITY"
    else
        CITY_PARAM="q=$CITY"
    fi

    current=$(curl -sf "$API/weather?appid=$KEY&$CITY_PARAM&units=$UNITS")
    forecast=$(curl -sf "$API/forecast?appid=$KEY&$CITY_PARAM&units=$UNITS&cnt=1")
else
    location=$(curl -sf https://location.services.mozilla.com/v1/geolocate?key=geoclue)

    if [ -n "$location" ]; then
        location_lat="$(echo "$location" | jq '.location.lat')"
        location_lon="$(echo "$location" | jq '.location.lng')"

        current=$(curl -sf "$API/weather?appid=$KEY&lat=$location_lat&lon=$location_lon&units=$UNITS")
        forecast=$(curl -sf "$API/forecast?appid=$KEY&lat=$location_lat&lon=$location_lon&units=$UNITS&cnt=1")
    fi
fi

if [ -n "$current" ] && [ -n "$forecast" ]; then
    current_temp=$(echo "$current" | jq ".main.temp" | cut -d "." -f 1)
    current_icon=$(echo "$current" | jq -r ".weather[0].icon")

    forecast_temp=$(echo "$forecast" | jq ".list[].main.temp" | cut -d "." -f 1)
    forecast_icon=$(echo "$forecast" | jq -r ".list[].weather[0].icon")


    if [ "$current_temp" -gt "$forecast_temp" ]; then
        trend=""
    elif [ "$forecast_temp" -gt "$current_temp" ]; then
        trend=""
    else
        trend=""
    fi


#     sun_rise=$(echo "$current" | jq ".sys.sunrise")
#     sun_set=$(echo "$current" | jq ".sys.sunset")
#     now=$(date +%s)
# 
#     if [ "$sun_rise" -gt "$now" ]; then
#         daytime=" $(get_duration "$((sun_rise-now))")"
#     elif [ "$sun_set" -gt "$now" ]; then
#         daytime=" $(get_duration "$((sun_set-now))")"
#     else
#         daytime=" $(get_duration "$((sun_rise-now))")"
#     fi

    # echo "$(get_icon "$current_icon") $current_temp$SYMBOL  $trend  $(get_icon "$forecast_icon") $forecast_temp$SYMBOL"

    # echo $(get_icon "$current_icon") > ~/.cache/weather/current_icon
    # qtile cmd-obj -o widget current_icon -f update -a $(get_icon "$current_icon")

    # echo $current_temp$SYMBOL > ~/.cache/weather/current_temp
    # qtile cmd-obj -o widget current_temp -f update -a $current_temp$SYMBOL

    # echo $trend > ~/.cache/weather/trend
    # qtile cmd-obj -o widget trend -f update -a $trend

    # echo $(get_icon "$forecast_icon") > ~/.cache/weather/forecast_icon
    # qtile cmd-obj -o widget forecast_icon -f update -a $(get_icon "$forecast_icon")

    # echo $forecast_temp$SYMBOL > ~/.cache/weather/forecast_temp
    # qtile cmd-obj -o widget forecast_temp -f update -a $forecast_temp$SYMBOL


    a=0
    until [ "$a" -ge 5 ]; do
      echo $(get_icon "$current_icon") > ~/.cache/weather/current_icon && break
      a=$((a+1))
      sleep .3
    done
    sleep 1

    x=0
    until [ "$x" -ge 5 ]; do
      qtile cmd-obj -o widget current_icon -f update -a \
      "$(get_icon "$current_icon")" && break
      x=$((x+1))
      sleep .3
    done

    echo $current_temp$SYMBOL > ~/.cache/weather/current_temp
    qtile cmd-obj -o widget current_temp -f update -a "$current_temp$SYMBOL"

    echo $trend > ~/.cache/weather/trend
    qtile cmd-obj -o widget trend -f update -a "$trend"

    b=0
    until [ "$b" -ge 5 ]; do
      echo $(get_icon "$forecast_icon") > ~/.cache/weather/forecast_icon && break
      b=$((b+1))
      sleep .3
    done
    sleep 1

    y=0
    until [ "$y" -ge 5 ]; do
      qtile cmd-obj -o widget forecast_icon -f update -a \
      "$(get_icon "$forecast_icon")" && break
      y=$((y+1))
      sleep .3
    done

    echo $forecast_temp$SYMBOL > ~/.cache/weather/forecast_temp
    qtile cmd-obj -o widget forecast_temp -f update -a "$forecast_temp$SYMBOL"

fi
